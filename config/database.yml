# MySQL. Versions 5.5.8 and up are supported.
#
# Install the MySQL driver
#   gem install mysql2
#
# Ensure the MySQL gem is defined in your Gemfile
#   gem "mysql2"
#
# And be sure to use new-style password hashing:
#   https://dev.mysql.com/doc/refman/5.7/en/password-hashing.html
#
default: &default
  adapter: mysql2
  encoding: utf8
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  username: coders40_root 
  password: K0x1nh4! 
  host: 108.179.193.190    
  port: 3306  

development:
  <<: *default
  database: coders40_activity-control # Nome do banco de dados para o ambiente de desenvolvimento

test:
  <<: *default
  database: coders40_activity-control_test

production:
  <<: *default
  database: activity_control_production
  username: atividade_user
  password: <%= ENV['ATIVIDADE_DATABASE_PASSWORD'] %> 

# As with config/credentials.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password or a full connection URL as an environment
# variable when you boot the app. For example:
#
#   DATABASE_URL="mysql2://myuser:mypass@localhost/somedatabase"
#
# If the connection URL is provided in the special DATABASE_URL environment
# variable, Rails will automatically merge its configuration values on top of
# the values provided in this file. Alternatively, you can specify a connection
# URL environment variable explicitly:
#
#   production:
#     url: <%= ENV["MY_APP_DATABASE_URL"] %>
#
# Read https://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full overview on how database connection configuration can be specified.
#
production:
  <<: *default
  database: activity_control_production
  username: activity_control
  password: <%= ENV["ACTIVITY_CONTROL_DATABASE_PASSWORD"] %>
